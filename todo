The two biggests bugs I’ve noticed are the following:

1. When clicking a line on the sourceCode panel, the CFG panel does  not update
2. (only if node not in current view)
    When clicking on the disassembly panel, the CFG panel does not update.



 Still at least 2 issues:
0) Source code to CFG window sometimes doesn't work.
1) if clicking on B43 from dissaseembly window, cfg can not show becasue the node is not there.
2) dissasembly view remains highlighted even when clicking on other nodes
    * this happens in the live version too.

3) 2nd Load issues:
    * after loading first dataset, if you load another dataset then the source files still stick around
    * sometimes those source files show up in CFG.

GetFileChoices.js 227:
I need to construct these somehow:
 json, callGraph, model
Probably from new functions in the new code.

Need to make dynamic: be able to enter any dir on input
main.js line 68 -> currently this will return the hard coded
dot file in the files directory: the graphFile mentioned in the ltimes_init.js

but we need it to actually use the DOT file we already retrieved.

6/1/21
- currently working on integration
- #gDiv is not in the body.
- so cfgView.js line 71 fails because nothing to append it too.


I can see the code goes to CFGView class's _render function:
    * but it can't find #gDiv.
    * graph correct,
    * filtered graph not correct: 9


July 30th -> Sabin defense.

next meeting with Matt:
Release and Review
Walk through code base


10/23/2020:
- fix PHI
- Function inlining tree:
    * make sure it doesn't get cut off.
- After changing source files
    * can not select source code and select assembly.

- Combine Function inline tree and Loop Hierarchy.


10/9/2020
DONE - Optviz: make sure "phi" or "phidata" each only appear once.
    * also make sure only the first %rbx will be crossed out, not the ones following.
Left off: Finish up making the new_html strike appear only once.

Goals:
- Big Binaries
- UI improvements.


DONE - get Sabin's latest stuff, and redeploy to RZ, CZ.
DONE - Selected graph nodes, created a link from there to the disassemblyview.
- Added zoom buttons to CFG view, but still need to bind them and make actual zoom action work.


- Zoom:
    * place link (index.html 188) for plus and minus
    * zoom out - make zoom.



Key things to get events working:
  var _observers = makeSignaller();


    d3.selectAll("#" + svgId + " g.node.enter")
        .on("mouseover", function(d, i){
          _showTooltip(d, i, divId, this);
          _fireFocusEvent(d,i);


        })
        .on("mouseout", function(d, i){
          _hideTooltip();
          _fireFocusOutEvent(d,i);

        })
        .on("click", function(d, i){
          // _clickEvent(d,i);
          _highlightEvent(d,i);
        })

  var _highlightEvent = function(d,i){
    _observers.notify({
      type: signalType.highlight,
      dataType: dataTypes.graphNode,
      d: d,
      i: i
    });
  }

  var _clickEvent = function(d,i) {
    _observers.notify({
      type: signalType.click,
      dataType: dataTypes.graphNode,
      d: d,
      i: i
    });
  }

  var _fireFocusEvent = function(d, i) {
    _observers.notify({
      type: signalType.focus,
      dataType: dataTypes.graphNode,
      d: d,
      i: i
    });

  };









"mov <span class='strikethrough'>%rbx</span> <span class='highlight'>phi_data</span>,%rdi"

DONE -  JSON has basic block boundaries
in Dissassembly View

OV.AutoTester.set(OV.AutoTester.LTIMES);
var xx = makeModel()
xx.get("bblocks")
xx.get("assemblyArray")

Bugs / Clean ups:

Suggestion:
Link from Selected Source Code line on the left to the Source Code Panel.

1) The black arrows don't really show up under CFG View.  It looks like a tiny
part of the black arrow is showing underneath the Label tag, not sure.
    * Can't reliably reproduce.

1.5) My suggestion: what about zoom buttons on the CFG View?
    * I feel like without a mouse i can't zoom directly: in/out.

2) Be able to click on a CFG tag and jump to source

2.5) The code to lock things, there's a function call to do that, according to sabin.

3) Instead of jump to selection automatically, offer a button that allows user
to decide when they want to jump to selection.

3) x4013ce: mov %rbx phi phi phi_data,%rdi
not a deal breaker

just tht there is an extra crossing out.
of the register name.








Next:
DONE - adam's RZ is now working.
DONE - CFG screen should laod for everyone now.
DONE - Box Width in FnLoops: the orange/blue boxes - make them the width of the text.
SABIN finished it - Zoom bug from callgraph (check to make sure sabin hasn't started before getting too deep)
DONE - better icon for top right, ( get window back icon better ) "Views"


NEXT:
- select assembly - click on the left, to make dissassembly scroll down to that function.
    * create link on the left side which when clicked executes this: $('.jump_spanly4010e1')[0].scrollIntoView()
    * need to rerender the disassembly view correctly to include jump_spanly on every rerender of it
    * test after many different situations to make sure jump_spanly always get rerendered.
- make spaces: in the dissassembly view.
    * basic blocks
    * below jumps and above jump targets.
- can't open *.h header files.
    * let's do error checking to see if we can check if the file is present and we have permisisons
    * return error message if not.
- 2 input boxes to allow the user to specify a different prefix
    * Need to figure out directories in common to all source code files to figure out prefix
    * Generate select drop down from values without that prefix.
    * when source code change event happens extract from two input boxes and combine.
- healthequity.


DONE 1. iterate through all contentItems tree and find thing we're looking for, and remove it.
DONE 2. render menu with checkboxes
DONE 3. uncheckbox -> extract name of content item and call removal function
DONE 4. checkboxed -> extract name of content item and call addChild with with hard coded location
DONE 5. open and close render menu.
DONE 6. every time a tab is closed, need to update the checkbox so it reflects that closure.
DONE 6.5 get rid of redundant x button on the right.
DONE - SubEnterExec    8. Rebind SubEnterExec when it comes back.
TEST - Reinitializing.  When a program has already been loaded, will the removed panels that have been re-added still work?
TEST - Disassembly - remove window and re-add it, make it still work.
- the blue for some reason still remains even when clicking on another row
    * SourceCode.
- make easy links to for loading short cuts.
- ??? try to return to original position.


More FE things to debug.  Here’s a binary from the intel compiler (previous one was gcc):
/usr/gapps/spot/optvis/tests/raja/build_intel_toss_3_x86_64_ib/bin/ltimes.

After clicking on ltimes.cpp line 144:

DONE - The FE goes unresponsive for a minute or so after opening this.  Can you look for some optimization opportunities?
    * dissasemblyView: Line 192.
    * something is replacing the var names.
    0x401180: call 0xfffffe30(%rip) 1, 0
    0x401185: mov $0xa,%edx
    0x40118a: lea 0x1fc1(%rip),%rsi
DONE - The FnLoops panel’s horizontal scrollbar is width limited.  So I can’t see the names of routines that are too far right.
- The CFG panel is still blank for me.  I clicked in it to scroll and seem to have hung up the whole FE for a couple minutes.


Later (very difficult)
    * remember location and index of each place where a tab gets removed.
    * use location and index to AddChild to precise location where it was taken from.
    * Corner case: if that parent no longer exists place it in the first tab section.




high = myLayout.root.contentItems[ 0 ].contentItems[0].contentItems[1]
myLayout.root.contentItems[0].contentItems[0].removeChild(high)

#  for this use configs in main_with_mvc_goldenlayouts.js
myLayout.root.contentItems[0].contentItems[0].addChild(high.config)


- can we just disable the close winodw?  it might be much easier.
- reopen the closed windows.
    1. Be able to get list of windows using goldenlayouts API
        * start with myLayout and use some function to retrieve list of windows.
        * Open drop down menu from top left and show a list of checkboxes for every window, and show checked if it's open, unchecked if not open
        * found myLayout.config but it's not up to date!

    2. if they click on a checkbox that is checked then close that window: removeChild( contentItem, true )
    3. if unchecked then open that window.  addChild()
    4. if they close a window through other means, update dropdown.
        * or just close the dropdown selector and regenerate it, when they reopen it.
    5. if they open a new window, update dropdown.


DONE - update the Optvis live with Sabin's new code, plus any integration and merge issues.
- perhaps later on: being able to define "/g/g0/pascal/input", root path because this path could be incorrect.
- StateManagement (started)
    * Left Off: get 'stateChanged' event working.


============================================================================================
DONE - Go from using the 3 stubs to actually getting a response back from the Server via matt's executables.
DONE - put the enter executable input dir modal in it's own panel in the left upper view but take the space out of VarRenamer.

DONE - fix input source - it should come from what's actually in the input box, not hard coded.
DONE - add a spinner to let user know something is running.
DONE - Notes: Remember to compile with -g so that the sourcefiles will be returned.

Next:
DONE - get Jira board working and give Sabin and Myself 1 ticket each.
DONE - Need better error reporting.  Show the user the error clearly whatever is returned from BE.
DONE - Permission script for better environment set up.


DONE - Solved a difficult venv issue (LC had moved a bunch of stuff that broke my existing venv)
    * now we have a brand new venv that we can install stuff into (not reusing the narf one)
    * plus documentation on how to create the venv.
DONE - this fixes the linking source code to callgraph: fixed the static stub loading to switch to dynamic name of the source file.  Instead of using a hardcoded filename, it will now use a dynamic filename based on what you select.
        - connecting sourceCode to callgraph fixed (with Sabin's suggestion of fixing the stub).

============================================================================
DONE - RZ Deploy is finished.
DONE - Start with a blank application, not Lulesh.
    * try helloworld and manually cut out the json so it looks empty.
    * maybe just blank panes.

============================================================================

DONE - update the Optvis live with Sabin's new code, plus any integration and merge issues.
    - Fix empty loading - one of sabin's changes must have loaded a default.
(started) - StateManagement
    * Left Off: get 'stateChanged' event working.


Later:
- TreeView -> to sort all those source files.



- GoldenLayouts -> State Management.
    * there's a config file,
    * GoldenLayouts.


- text size change
- Work on the display issues: why is the boxes getting bigger with each click
    * figured out it's coming from the graphlibDot library, can override?  or find the true source.
- Display issue: why is it jumping around to the left and right.

/usr/global/web-pages/lc/www/lorenz_base/dev/pascal/optvis/sample_inputs/3/

Sabin Next:
- Work on linking source code to the Callgraph.


Later On:
Use a Source Tree to show the source files in the top left.


-> may want to clean this up every now and then: ls /tmp/opt*
    * use rm to clean it up, if it's not already cleaned up.



- DONE - integrated Sabin's branch into my branch and allow it to run on LC
    * had to move things around, change permissions, change js and css references, and some other stuff
- DONE - now able to send JSONP -> /usr/gapps/spot/optvis/optparser.py open /g/g0/pascal/a.out via the GET button and input on the left.
- DONE - Stubs for the request (until we can get the real data back)

- DONE - Show a file in the view that the user selects
    - DONE - needs to send an AJAX request fetch the file needed.
3. Load files the user requested into it's own window View box.
4. Load the 3 stubs into our loadFile_
4.5  Make a better stub a.out that's at least got a couple of function calls.
5. Get findLoops requests working without flask
    * partly working.  Request is sent but nothing get sent back.
8. do a custom virtualenv for this application: currently we're using the narf one i created.


TODO:
https://lc.llnl.gov/lorenz_base/dev/pascal/optvis/



#vi hello.c
# 1002  gcc hello.c
# 1003  gcc -g hello.c
# 1004  ls a.out
# 1005  ./a.out
# 1006  cd /usr/gapps/spot/optvis/
# 1007  ls
# 1008  ./optparser.py open ~/a.out
# 1009  ./optparser.py dot /var/tmp/pascal/optvis_8cm_nh07
# 1010  history
# 1011  ./optparser.py parse /var/tmp/pascal/optvis_8cm_nh07
# 1012  ./optparser.py sourcefiles /var/tmp/pascal/optvis_8cm_nh07
#       Use the source files that are sent back to the client to create a drop down or something that the user can seelct.
#       The sourcecode files that the user picks will be shown to the user on a pane.
# 1013  history
# ./optparser.py close /var/tmp/pascal/optvis_8cm_nh07
# ./optparser.py --help


Permissions:
chmod 755 index.html
chmod 755 `find . \( ! -regex '.*/\..*' \) -type d`;
chmod 755 `find . -name *.js`
chmod 755 `find . -name *.json`
chmod 755 `find . -name *.css`
chmod 755 `find . -name *.cc`



Installing flask
pip install flask

Running the server:
- From the terminal, cd to the root directory of optvis (i.e. the directory where server.py is located)
- Then run the following commands

$ export FLASK_APP=server.py
$ python -m flask run

It should run a webserver. The main page can accessed using the following URL.

http://localhost:5000/optvis/

For more details, I find this quick start guide useful https://flask.palletsprojects.com/en/1.1.x/quickstart/. Thanks.




This one already has flask installed:
(narf-env)pascal@oslic2 /usr/global/tools/lorenz/python/narf-env/bin: pip install flask
Requirement already satisfied: flask in /usr/global/tools/lorenz/python/narf-env/lib/python3.5/site-packages (1.0.3)
Requirement already satisfied: Werkzeug>=0.14 in /usr/global/tools/lorenz/python/narf-env/lib/python3.5/site-packages (from flask) (0.15.4)
Requirement already satisfied: Jinja2>=2.10 in /usr/global/tools/lorenz/python/narf-env/lib/python3.5/site-packages (from flask) (2.10.1)
Requirement already satisfied: click>=5.1 in /usr/global/tools/lorenz/python/narf-env/lib/python3.5/site-packages (from flask) (7.0)
Requirement already satisfied: itsdangerous>=0.24 in /usr/global/tools/lorenz/python/narf-env/lib/python3.5/site-packages (from flask) (1.1.0)
Requirement already satisfied: MarkupSafe>=0.23 in /usr/global/tools/lorenz/python/narf-env/lib/python3.5/site-packages (from Jinja2>=2.10->flask) (1.1.1)


1. attempt to install FLASK on LC VM.  if that doesn't work we'll have to figure out a work around for the Flask.
    * flask stuff is in server.py
    * sabin will send me the commands he's using to install flask
    * he uses the url: http://localhost:5000/optvis/


Permissions:
lorenz_base/dev => lcstaff only
/usr/global/web-pages/lc/www/devel/pascal => lorenzdv
